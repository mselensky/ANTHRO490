[
["silva-based-classification-without-filtering.html", "Chapter 3 Silva-based classification without filtering 3.1 Taxonomy assignment using Silva 3.2 Taxa barplot 3.3 Phylogenetic tree 3.4 Core diversity metrics 3.5 Alpha diversity significance 3.6 NMDS plots in R ", " Chapter 3 Silva-based classification without filtering 3.1 Taxonomy assignment using Silva Since I am analyzing environmental data, I used the Silva database (132.99). I used the sklearn classification algorithm. I used the same --i-reads as detailed in Chapter2 (De novo clustering). These are seqs clustered using a 97% cutoff, but no filtering was performed on them: qiime feature-classifier classify-sklearn --i-classifier /projects/e30740/qiime2_classifiers/silva-132-99-nb-classifier.qza --i-reads /projects/e30740/mselensky/FinalProject/rep-LABEseqs-dn-97.qza --o-classification /projects/e30740/mselensky/FinalProject/NoFiltering/taxonomy_unfiltered.qza I was not able to visualize the resultant taxonomy.qza file as a table using metadata tabulate. I had to employ the following workaround, which allowed me to visualize my taxonomy information in tabular form: qiime metadata tabulate --m-input-file /projects/e30740/mselensky/FinalProject/NoFiltering/taxonomy_unfiltered.qza --o-visualization /projects/e30740/mselensky/FinalProject/NoFiltering/taxonomy_unfiltered.qzv qiime tools export --input-path /projects/e30740/mselensky/FinalProject/NoFiltering/taxonomy_unfiltered.qza --output-path --output-path /projects/e30740/mselensky/FinalProject/NoFiltering/taxonomy-with-spaces qiime metadata tabulate --m-input-file /projects/e30740/mselensky/FinalProject/NoFiltering/taxonomy-with-spaces/taxonomy.tsv --o-visualization /projects/e30740/mselensky/FinalProject/NoFiltering/taxonomy-as-metadata_unfiltered.qzv qiime tools export --input-path /projects/e30740/mselensky/FinalProject/NoFiltering/taxonomy-as-metadata_unfiltered.qzv --output-path /projects/e30740/mselensky/FinalProject/NoFiltering/taxonomy-as-metadata qiime tools import --type &#39;FeatureData[Taxonomy]&#39; --input-path /projects/e30740/mselensky/FinalProject/NoFiltering/taxonomy-as-metadata/metadata.tsv --output-path /projects/e30740/mselensky/FinalProject/NoFiltering/taxonomy-without-spaces_unfiltered.qza qiime metadata tabulate --m-input-file /projects/e30740/mselensky/FinalProject/NoFiltering/taxonomy-without-spaces_unfiltered.qza --o-visualization /projects/e30740/mselensky/FinalProject/NoFiltering/taxonomy-without-spaces_unfiltered.qzv 3.2 Taxa barplot This yielded a taxa barplot as an output (before rarefaction): qiime taxa barplot --i-table /projects/e30740/mselensky/FinalProject/NoFiltering/LABEtable_unaltered-dn-97.qza --i-taxonomy /projects/e30740/mselensky/FinalProject/NoFiltering/taxonomy_unfiltered.qza --m-metadata-file /projects/e30740/mselensky/FinalProject/LABEmetadata_all_samples.txt --o-visualization /projects/e30740/mselensky/FinalProject/NoFiltering/LABE_taxa_barplot_unfiltered.qzv 3.3 Phylogenetic tree qiime phylogeny align-to-tree-mafft-fasttree --i-sequences /projects/e30740/mselensky/FinalProject/NoFiltering/rep-LABEseqs_unaltered-dn-97.qza --o-alignment /projects/e30740/mselensky/FinalProject/NoFiltering/Phylogeny/LABEseqs_unaltered-dn-97_aligned --o-masked-alignment /projects/e30740/mselensky/FinalProject/NoFiltering/Phylogeny/LABEseqs_unaltered-dn-97_masked_aligned --o-tree /projects/e30740/mselensky/FinalProject/NoFiltering/Phylogeny/LABEtree_unfiltered --o-rooted-tree /projects/e30740/mselensky/FinalProject/NoFiltering/Phylogeny/LABEtree_rooted_unfiltered --output-dir /projects/e30740/mselensky/FinalProject/NoFiltering/Phylogeny 3.4 Core diversity metrics First, I made an alpha rarefaction plot to determine sampling depth: qiime diversity alpha-rarefaction --i-table /projects/e30740/mselensky/FinalProject/NoFiltering/LABEtable_unaltered-dn-97.qza --p-max-depth 5000 --p-min-depth 1 --p-steps 10 --p-iterations 10 --o-visualization /projects/e30740/mselensky/FinalProject/NoFiltering/LABE_alpha_rarefied_table_unfiltered When sampling depth = 2000, * Retained 58,000 (50.74%) sequences in 29 (96.67%) samples at the specifed sampling depth. Using the phylogenetic tree from step 8, I then measured diversity core metrics on my rarefied data with a sampling depth of 2000: qiime diversity core-metrics-phylogenetic --i-phylogeny /projects/e30740/mselensky/FinalProject/NoFiltering/Phylogeny/LABEtree_rooted_unfiltered.qza --i-table /projects/e30740/mselensky/FinalProject/NoFiltering/LABEtable_unaltered-dn-97.qza --p-sampling-depth 2000 --m-metadata-file /projects/e30740/mselensky/FinalProject/LABEmetadata_all_samples.txt --output-dir /projects/e30740/mselensky/FinalProject/NoFiltering/CoreMetricsResults Outputs give the following information: ALPHA DIVERSITY CORE METRICS: Shannon’s diversity index * A quantitative measure of community richness Observed OTUs * A qualitative measure of community richness Faith’s Phylogenetic Diversity * A qualitiative measure of community richness that incorporates phylogenetic relationships between the features Evenness (or Pielou’s Evenness) * A measure of community evenness BETA DIVERSITY CORE METRICS: Jaccard distance * A qualitative measure of community dissimilarity Bray-Curtis * A quantitative measure of community dissimilarity Unweighted UniFrac distance * A qualitative measure of community dissimilarity that incorporates phylogenetic relationships between features Weighted UniFrac distance * A quantitative measure of community dissimilarity that incorporates phylogenetic relationships between features 3.5 Alpha diversity significance As in Chapter 2, I chose Shannon for all downstream alpha diversity analyses. I did not include other indices in my workflow this time to save space. Alpha diversity group significance: #Shannon qiime diversity alpha-group-significance --i-alpha-diversity /projects/e30740/mselensky/FinalProject/NoFiltering/CoreMetricsResults/shannon_vector.qza --m-metadata-file /projects/e30740/mselensky/FinalProject/LABEmetadata_all_samples.txt --o-visualization /projects/e30740/mselensky/FinalProject/NoFiltering/CoreMetricsResults/shannon-group-significance_silv_unfiltered.qzv Alpha diversity correlation: qiime diversity alpha-correlation --i-alpha-diversity /projects/e30740/mselensky/FinalProject/NoFiltering/CoreMetricsResults/shannon_vector.qza --m-metadata-file /projects/e30740/mselensky/FinalProject/LABEmetadata_all_samples.txt --o-visualization /projects/e30740/mselensky/FinalProject/NoFiltering/CoreMetricsResults/shannon-alpha-correlation.qzv 3.6 NMDS plots in R 3.6.1 Phylum-level NMDS script: library(ggplot2) library(vegan) library(funrar) library(plotly) rm(list=ls()) getwd() setwd(&quot;C:/Users/msele/OneDrive/Documents/Winter2019_Classes/ANTHRO_490/Final_Project/core_metrics_unfiltered&quot;) L2 &lt;- read.csv(&quot;level_2_unfiltered.csv&quot;, header = TRUE, row.names = 1, check.names = FALSE) L2_metadata &lt;- read.csv(&quot;LABEmetadata_all_samples.txt&quot;, check.names = FALSE, fileEncoding = &quot;UTF-8-BOM&quot;) L2_abun &lt;- L2[,c(-43:-55)] is.data.frame(L2_abun) L2_transposed &lt;- t(L2_abun) # Convert L2 (an absolute abundance table) into relative abundance table mat = as.matrix(L2_transposed) head(mat) # Has absolute abundances rel_mat = make_relative(mat) head(rel_mat) # Relative abundances # Make_relative causes rel_mat to be atomic, not recursive. downstream data.frame only works on recursive objects is.recursive(rel_mat) is.atomic(rel_mat) rel_mat_recursive &lt;- as.data.frame(rel_mat) is.recursive(rel_mat_recursive) rel_mat_recursive_t &lt;- t(rel_mat_recursive) is.recursive(rel_mat_recursive_t) rel_mat_recursive_t &lt;- as.data.frame(rel_mat_recursive_t) # grouping_info &lt;- data.frame(row.names = rownames(rel_mat_recursive_t), t(as.data.frame(strsplit(rownames(rel_mat_recursive_t),&quot;\\t&quot;)))) head(grouping_info) NMDS_L2 &lt;- metaMDS(rel_mat_recursive_t, distance = &quot;bray&quot;, k = 2, try = 20, trymax = 100) stressplot(NMDS_L2, pch = 19, cex=0.75, l.col = &quot;tomato&quot;, p.col = &quot;skyblue&quot;) info_L2 = data.frame(x=NMDS_L2$point[,2],y=NMDS_L2$point[,1],SampleID = as.factor(grouping_info[,1])) # Merge metadata file with info_L5, which contains NMDS coordinates L2_merged &lt;- merge(info_L2, L2_metadata, by.x = &quot;SampleID&quot;, by.y = &quot;SampleID&quot;) # Plot NMDS p &lt;- ggplot(L2_merged, aes(x, y, label=&quot;&quot;, color = Type, group = Type, text = paste(&quot;Cave: &quot;, Cave))) + geom_point() + scale_shape_manual(values=c(1:17)) + geom_text() + ggtitle(&quot;NMDS of Phylum-Level Taxonomy using Silva without Filtering&quot;) + theme(panel.background = element_rect(fill = &quot;white&quot;)) + stat_ellipse(geom = &quot;path&quot;) p &lt;- ggplotly(p) p Stressplot for Silva-based, unfiltered, phylum-level NMDS: # Stress plot stressplot(NMDS_L2, pch = 19, cex=0.75, l.col = &quot;tomato&quot;, p.col = &quot;skyblue&quot;) ### Family-level NMDS scripts: # ANTHRO 490 final project - NMDS plots # Silva without Filtering # Winter 2019 library(ggplot2) library(vegan) library(funrar) library(plotly) rm(list=ls()) getwd() setwd(&quot;C:/Users/msele/OneDrive/Documents/Winter2019_Classes/ANTHRO_490/Final_Project/core_metrics_unfiltered&quot;) L5 &lt;- read.csv(&quot;level_5_unfiltered.csv&quot;, header = TRUE, row.names = 1, check.names = FALSE) L5_metadata &lt;- read.csv(&quot;LABEmetadata_all_samples.txt&quot;, check.names = FALSE, fileEncoding = &quot;UTF-8-BOM&quot;) L5_abun &lt;- L5[,c(-726:-738)] is.data.frame(L5_abun) L5_transposed &lt;- t(L5_abun) # Convert L2 (an absolute abundance table) into relative abundance table mat = as.matrix(L5_transposed) head(mat) # Has absolute abundances rel_mat = make_relative(mat) head(rel_mat) # Relative abundances # Make_relative causes rel_mat to be atomic, not recursive. downstream data.frame only works on recursive objects is.recursive(rel_mat) is.atomic(rel_mat) rel_mat_recursive &lt;- as.data.frame(rel_mat) is.recursive(rel_mat_recursive) rel_mat_recursive_t &lt;- t(rel_mat_recursive) is.recursive(rel_mat_recursive_t) rel_mat_recursive_t &lt;- as.data.frame(rel_mat_recursive_t) # grouping_info &lt;- data.frame(row.names = rownames(rel_mat_recursive_t), t(as.data.frame(strsplit(rownames(rel_mat_recursive_t),&quot;\\t&quot;)))) head(grouping_info) NMDS_L5 &lt;- metaMDS(rel_mat_recursive_t, distance = &quot;bray&quot;, k = 2, try = 20, trymax = 100) stressplot(NMDS_L5, pch = 19, cex=0.75, l.col = &quot;tomato&quot;, p.col = &quot;skyblue&quot;) info_L5 = data.frame(x=NMDS_L5$point[,2],y=NMDS_L5$point[,1],SampleID = as.factor(grouping_info[,1])) # Merge metadata file with info_L5, which contains NMDS coordinates L5_merged &lt;- merge(info_L5, L5_metadata, by.x = &quot;SampleID&quot;, by.y = &quot;SampleID&quot;) # Plot NMDS p &lt;- ggplot(L5_merged, aes(x, y, label=&quot;&quot;, color = Type, group = Type, text = paste(&quot;Cave: &quot;, Cave))) + geom_point() + scale_shape_manual(values=c(1:17)) + geom_text() + ggtitle(&quot;NMDS of Family-Level Taxonomy using Silva without Filtering&quot;) + stat_ellipse(geom = &quot;path&quot;) p &lt;- ggplotly(p) p Family-level NMDS plot with ellipses indicating 95% confidence level at which ellipses were drawn: # Plot NMDS p &lt;- ggplot(L5_merged, aes(x, y, label=&quot;&quot;, color = Class, group = Mat_color, text = paste(&quot;Cave: &quot;, Cave))) + geom_point() + # scale_shape_manual(values=c(1:17)) + scale_color_manual(values=c(&quot;darkgoldenrod4&quot;, &quot;tan&quot;, &quot;grey88&quot;, &quot;gold&quot;)) + geom_text() + ggtitle(&quot;Family-level NMDS using Silva (without Filtering)&quot;) + theme(panel.background = element_rect(&quot;white&quot;)) + stat_ellipse(geom = &quot;path&quot;) p &lt;- ggplotly(p) p "]
]
