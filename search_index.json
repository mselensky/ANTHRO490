[
["silva-based-classification-with-filtering.html", "Chapter 2 Silva-based classification with filtering 2.1 Import data: 2.2 Dereplicate sequences: 2.3 De novo clustering: 2.4 Chimera checking and removal: 2.5 Abundance filtering 2.6 Taxonomy assignment using Silva 2.7 Taxa barplot 2.8 Phylogenetic tree 2.9 Core diversity metrics 2.10 Alpha diversity significance 2.11 Beta diversity significance 2.12 Importing data for R-based analyses 2.13 NMDS plots in R ", " Chapter 2 Silva-based classification with filtering 2.1 Import data: I must convert the provided FASTA file into .qza format, which is readable by Qiime2. qiime tools import --input-path LABEseqs.fna --output-path LABEseqs.qza --type &#39;SampleData[Sequences]&#39; 2.2 Dereplicate sequences: qiime vsearch dereplicate-sequences --i-sequences LABEseqs.qza --o-dereplicated-table LABEtable.qza --o-dereplicated-sequences rep-LABEseqs.qza 2.3 De novo clustering: qiime vsearch cluster-features-de-novo --i-table LABEtable.qza --i-sequences rep-LABEseqs.qza --p-perc-identity 0.97 --o-clustered-table LABEtable-dn-97.qza --o-clustered-sequences rep-LABEseqs-dn-97.qza Since I am using 454 data, I used a cutoff of 97% to avoid PCR-induced error in my clustering algorithm. 2.4 Chimera checking and removal: Check for chimeras: qiime vsearch uchime-denovo --i-table LABEtable-dn-97.qza --i-sequences rep-LABEseqs-dn-97.qza --output-dir uchime-dn-out Visualize the resultant chimera check output: qiime metadata tabulate --m-input-file uchime-dn-out/stats.qza --o-visualization uchime-dn-out/stats.qzv Number of samples: 30 Number of features: 103,356 (sequences) Total frequency: 127,603 (reads) Filter out chimeras and borderline chimeras: qiime feature-table filter-features --i-table LABEtable-dn-97.qza --m-metadata-file uchime-dn-out/nonchimeras.qza --o-filtered-table uchime-dn-out/LABEtable-nonchimeric-wo-borderline.qza qiime feature-table filter-seqs --i-data rep-LABEseqs-dn-97.qza --m-metadata-file uchime-dn-out/nonchimeras.qza --o-filtered-data uchime-dn-out/LABErep-seqs-nonchimeric-wo-borderline.qza Visualize the resultant chimera-free output: qiime feature-table summarize --i-table uchime-dn-out/LABEtable-nonchimeric-wo-borderline.qza --o-visualization uchime-dn-out/table-nonchimeric-wo-borderline.qzv Number of samples: 30 Number of features: 13,389 (OTUs) Total frequency: 114,300 (reads) NOTE - Lavoie et al. 2017 report 140,848 OTUs. 2.5 Abundance filtering qiime feature-table filter-samples --i-table /projects/e30740/mselensky/FinalProject/uchime-dn-out/LABEtable-nonchimeric-wo-borderline.qza --p-min-frequency 100 --o-filtered-table /projects/e30740/mselensky/FinalProject/uchime-dn-out/sample-frequency100-filtered-LABEtable-dn-97.qza qiime feature-table filter-seqs --i-data /projects/e30740/mselensky/FinalProject/uchime-dn-out/LABErep-seqs-nonchimeric-wo-borderline.qza --p-min-frequency 100 --o-filtered-data uchime-dn-out/LABErep-seqs-nonchimeric-wo-borderline.qza 2.6 Taxonomy assignment using Silva Since I am analyzing environmental data, I used the Silva database (132.99). I used the sklearn classification algorithm. qiime feature-classifier classify-sklearn --i-classifier /projects/e30740/qiime2_classifiers/silva-132-99-nb-classifier.qza --i-reads /projects/e30740/mselensky/FinalProject/uchime-dn-out/LABErep-seqs-nonchimeric-wo-borderline.qza --o-classification /projects/e30740/mselensky/taxonomy/taxonomy.qza I was not able to visualize the resultant taxonomy.qza file as a table using metadata tabulate. I had to employ the following workaround, which allowed me to visualize my taxonomy information in tabular form: qiime tools export --input-path /projects/e30740/mselensky/FinalProject/taxonomy/taxonomy.qza --output-path /projects/e30740/mselensky/FinalProject/taxonomy/taxonomy-with-spaces qiime metadata tabulate --m-input-file /projects/e30740/mselensky/FinalProject/taxonomy/taxonomy-with-spaces/taxonomy.tsv --o-visualization /projects/e30740/mselensky/FinalProject/taxonomy/taxonomy-as-metadata.qzv qiime tools export --input-path /projects/e30740/mselensky/FinalProject/taxonomy/taxonomy-as-metadata.qzv --output-path /projects/e30740/mselensky/FinalProject/taxonomy/taxonomy-as-metadata qiime tools import --type &#39;FeatureData[Taxonomy]&#39; --input-path /projects/e30740/mselensky/FinalProject/taxonomy/taxonomy-as-metadata/metadata.tsv --output-path /projects/e30740/mselensky/FinalProject/taxonomy/taxonomy-without-spaces.qza qiime metadata tabulate --m-input-file /projects/e30740/mselensky/FinalProject/taxonomy/taxonomy-without-spaces.qza --o-visualization /projects/e30740/mselensky/FinalProject/taxonomy/taxonomy-without-spaces.qzv 2.7 Taxa barplot This yielded a taxa barplot as an output (before rarefaction): qiime taxa barplot --i-table /projects/e30740/mselensky/FinalProject/uchime-dn-out/LABEtable-nonchimeric-wo-borderline.qza --i-taxonomy /projects/e30740/mselensky/FinalProject/taxonomy/taxonomy.qza --m-metadata-file /projects/e30740/mselensky/FinalProject/LABEmetadata.txt --o-visualization /projects/e30740/mselensky/FinalProject/taxonomy/LABE_taxa_barplot.qzv 2.8 Phylogenetic tree qiime phylogeny align-to-tree-mafft-fasttree --i-sequences /projects/e30740/mselensky/FinalProject/uchime-dn-out/LABErep-seqs-nonchimeric-wo-borderline.qza --o-alignment /projects/e30740/mselensky/FinalProject/Phylogeny/LABErep-seqs-nonchimeric-wo-borderline_aligned --o-masked-alignment /projects/e30740/mselensky/FinalProject/Phylogeny/LABErep-seqs-nonchimeric-wo-borderline_masked_aligned --o-tree /projects/e30740/mselensky/FinalProject/Phylogeny/LABEtree --o-rooted-tree /projects/e30740/mselensky/FinalProject/Phylogeny/LABEtree_rooted --output-dir /projects/e30740/mselensky/FinalProject/Phylogeny 2.9 Core diversity metrics First, I made an alpha rarefaction plot to determine sampling depth: qiime diversity alpha-rarefaction --i-table /projects/e30740/mselensky/FinalProject/uchime-dn-out/LABEtable-nonchimeric-wo-borderline.qza --p-max-depth 5000 --p-min-depth 1 --p-steps 10 --p-iterations 10 --o-visualization /projects/e30740/mselensky/FinalProject/LABE_alpha_rarefied_table When sampling depth = 2000, * Retained 58,000 (50.74%) sequences in 29 (96.67%) samples at the specifed sampling depth. Using the phylogenetic tree from step 8, I then measured diversity core metrics on my rarefied data with a sampling depth of 2000: qiime diversity core-metrics-phylogenetic --i-phylogeny /projects/e30740/mselensky/FinalProject/Phylogeny/LABEtree_rooted.qza --i-table /projects/e30740/mselensky/FinalProject/uchime-dn-out/LABEtable-nonchimeric-wo-borderline.qza --p-sampling-depth 2000 --m-metadata-file /projects/e30740/mselensky/FinalProject/LABEmetadata_all_samples.txt --output-dir /projects/e30740/mselensky/FinalProject/CoreMetricsResults Outputs give the following information: ALPHA DIVERSITY CORE METRICS: Shannon’s diversity index * A quantitative measure of community richness Observed OTUs * A qualitative measure of community richness Faith’s Phylogenetic Diversity * A qualitiative measure of community richness that incorporates phylogenetic relationships between the features Evenness (or Pielou’s Evenness) * A measure of community evenness BETA DIVERSITY CORE METRICS: Jaccard distance * A qualitative measure of community dissimilarity Bray-Curtis * A quantitative measure of community dissimilarity Unweighted UniFrac distance * A qualitative measure of community dissimilarity that incorporates phylogenetic relationships between features Weighted UniFrac distance * A quantitative measure of community dissimilarity that incorporates phylogenetic relationships between features 2.10 Alpha diversity significance #Faith&#39;s Phylogenetic Diversity qiime diversity alpha-group-significance --i-alpha-diversity /projects/e30740/mselensky/FinalProject/CoreMetricsResults/faith_pd_vector.qza --m-metadata-file /projects/e30740/mselensky/FinalProject/LABEmetadata_all_samples.txt --o-visualization /projects/e30740/mselensky/FinalProject/CoreMetricsResults/faith-pd-group-significance.qzv # Shannon qiime diversity alpha-group-significance --i-alpha-diversity /projects/e30740/mselensky/FinalProject/CoreMetricsResults/shannon_vector.qza --m-metadata-file /projects/e30740/mselensky/FinalProject/LABEmetadata_all_samples.txt --o-visualization /projects/e30740/mselensky/FinalProject/CoreMetricsResults/shannon-group-significance.qzv # Pielou&#39;s evenness qiime diversity alpha-group-significance --i-alpha-diversity /projects/e30740/mselensky/FinalProject/CoreMetricsResults/evenness_vector.qza --m-metadata-file /projects/e30740/mselensky/FinalProject/LABEmetadata_all_samples.txt --o-visualization /projects/e30740/mselensky/FinalProject/CoreMetricsResults/evenness-group-significance.qzv I will use Shannon for downstream processes. It had the lowest p-value for all variables. Visualize alpha diversity correlation: qiime diversity alpha-correlation --i-alpha-diversity /projects/e30740/mselensky/FinalProject/CoreMetricsResults/shannon_vector.qza --m-metadata-file /projects/e30740/mselensky/FinalProject/LABEmetadata_all_samples.txt --o-visualization /projects/e30740/mselensky/FinalProject/CoreMetricsResults/shannon-alpha-correlation.qzv 2.11 Beta diversity significance Visualizations for UniFrac (weighted &amp; unweighted), Jaccard, and Bray Curtis were provided by qiime diversity core-metrics-phylogenetic. I am interested in comparing the signficance of “Class” among my samples. “Class” provides information whether a sample came from a yellow/white/tan microbial mat, or from the overlying surface soil of a cave. qiime diversity beta-group-significance --i-distance-matrix /projects/e30740/mselensky/FinalProject/CoreMetricsResults/unweighted_unifrac_distance_matrix.qza --m-metadata-file /projects/e30740/mselensky/FinalProject/LABEmetadata_all_samples.txt --m-metadata-column Class --p-pairwise --o-visualization /projects/e30740/mselensky/FinalProject/CoreMetricsResults/unweighted-unifrac-Class-significance.qzv Make PCoA from distance matrix: qiime diversity pcoa --i-distance-matrix /projects/e30740/mselensky/FinalProject/CoreMetricsResults/bray_curtis_distance_matrix.qza --o-pcoa /projects/e30740/mselensky/FinalProject/CoreMetricsResults/bray_curtis_pcoa singularity exec -B /projects/e30740 -B /projects/e30740/mselensky/FinalProject /projects/e30740/qiime2-core2018-8.simg qiime diversity pcoa --i-distance-matrix /projects/e30740/mselensky/FinalProject/CoreMetricsResults/bray_curtis_distance_matrix.qza --o-pcoa /projects/e30740/mselensky/FinalProject/CoreMetricsResults/bray_curtis_pcoa Plot Emperor PCoA for Distance from cave entrance. qiime emperor plot --i-pcoa /projects/e30740/mselensky/FinalProject/CoreMetricsResults/bray_curtis_pcoa.qza --m-metadata-file /projects/e30740/mselensky/FinalProject/LABEmetadata_no_soils.txt --p-custom-axes Distance_from_entrance --o-visualization /projects/e30740/mselensky/FinalProject/Bray-Curtis-emperor-Distance_from_entrance.qzv 2.12 Importing data for R-based analyses I got a little sick of using Qiime on Quest, so I decided to do all further analyses in R. I needed to export my OTU table as a .tsv for downstream R analyses: qiime tools export --input-path /projects/e30740/mselensky/FinalProject/uchime-dn-out/LABEtable-nonchimeric-wo-borderline.qza --output-path /projects/e30740/mselensky/FinalProject/Filtered qiime tools export --input-path /projects/e30740/mselensky/FinalProject/taxonomy/taxonomy.qza --output-path /projects/e30740/mselensky/FinalProject/taxonomy biom add-metadata -i /projects/e30740/mselensky/FinalProject/Filtered/feature-table.biom -o /projects/e30740/mselensky/FinalProject/Filtered/feature-table_with_taxa.biom --observation-metadata-fp /projects/e30740/mselensky/FinalProject/taxonomy/taxonomy.tsv --sc-separated taxonomy --observation-header OTUID,taxonomy biom convert -i /projects/e30740/mselensky/FinalProject/Filtered/feature-table_with_taxa.biom -o /projects/e30740/mselensky/FinalProject/Filtered/feature-table_with_taxa.txt --to-tsv --header-key taxonomy In python, I ran: summarize_taxa.py -i feature-table_with_taxa.biom -a -o feature-table_with_taxa_abs_summary/ -L 1,2,3,4,5,6,7 --suppress_biom_table_output This provided me with 7 feature-table_with_taxa_L(x).txt files, where (x) = taxonomic level of classification. After doing this, I realized that view.qiime2.org allows you to directly convert .qza files to .csv based on taxonomic level…oops! 2.13 NMDS plots in R 2.13.1 Phylum-level NMDS # ANTHRO 490 final project - NMDS plots # Silva with Filtering # Phylum-level NMDS # Winter 2019 library(ggplot2) library(vegan) library(funrar) library(plotly) rm(list=ls()) getwd() setwd(&quot;C:/Users/msele/OneDrive/Documents/Winter2019_Classes/ANTHRO_490/Final_Project/taxonomy&quot;) L2 &lt;- read.delim(&quot;feature-table_with_taxa_L2.txt&quot;, sep=&quot;\\t&quot;, header = TRUE, row.names = 1, check.names = FALSE) L2_metadata &lt;- read.csv(&quot;LABEmetadata_all_samples.txt&quot;, check.names = FALSE, fileEncoding = &quot;UTF-8-BOM&quot;) is.data.frame(L2) L2_transposed &lt;- t(L2) # Convert L5 (an absolute abundance table) into relative abundance table mat = as.matrix(L2_transposed) head(mat) # Has absolute abundances rel_mat = make_relative(mat) head(rel_mat) # Relative abundances # Make_relative causes rel_mat to be atomic, not recursive. downstream data.frame only works on recursive objects is.recursive(rel_mat) is.atomic(rel_mat) rel_mat_recursive &lt;- as.data.frame(rel_mat) is.recursive(rel_mat_recursive) # grouping_info &lt;- data.frame(row.names = rownames(rel_mat), t(as.data.frame(strsplit(rownames(rel_mat),&quot;\\t&quot;)))) head(grouping_info) NMDS_L2 &lt;- metaMDS(rel_mat_recursive, distance = &quot;bray&quot;, k = 2, try = 20, trymax = 100) stressplot(NMDS_L2, pch = 19, cex=0.75, l.col = &quot;tomato&quot;, p.col = &quot;skyblue&quot;) info_L2 = data.frame(x=NMDS_L2$point[,2],y=NMDS_L2$point[,1],SampleID = as.factor(grouping_info[,1])) p &lt;- ggplot(L2_merged, aes(x, y, label=SampleID, color = Type, group = Type, text = paste(&quot;Cave: &quot;, Cave))) + geom_point() + scale_shape_manual(values=c(1:17)) + #geom_text() + ggtitle(&quot;NMDS of Phylum-Level Taxonomy using Silva with Filtering&quot;) + theme(panel.background = element_rect(&quot;white&quot;)) + stat_ellipse(geom = &quot;path&quot;) p &lt;- ggplotly(p) p 2.13.2 Family-level NMDS library(ggplot2) library(vegan) library(funrar) library(plotly) #package_version(&#39;plotly&#39;) rm(list=ls()) getwd() setwd(&quot;C:/Users/msele/OneDrive/Documents/Winter2019_Classes/ANTHRO_490/Final_Project/taxonomy&quot;) L5 &lt;- read.delim(&quot;feature-table_with_taxa_L5.txt&quot;, sep=&quot;\\t&quot;, header = TRUE, row.names = 1, check.names = FALSE) L5_metadata &lt;- read.csv(&quot;LABEmetadata_all_samples.txt&quot;, check.names = FALSE, fileEncoding = &quot;UTF-8-BOM&quot;) is.data.frame(L5) L5_transposed &lt;- t(L5) # Convert L5 (an absolute abundance table) into relative abundance table mat = as.matrix(L5_transposed) rel_mat = make_relative(mat) # Make_relative causes rel_mat to be atomic, not recursive. downstream data.frame only works on recursive objects is.recursive(rel_mat) is.atomic(rel_mat) rel_mat_recursive &lt;- as.data.frame(rel_mat) is.recursive(rel_mat_recursive) grouping_info &lt;- data.frame(row.names = rownames(rel_mat), t(as.data.frame(strsplit(rownames(rel_mat),&quot;\\t&quot;)))) head(grouping_info) NMDS_L5 &lt;- metaMDS(rel_mat_recursive, distance = &quot;bray&quot;, k = 2, try = 20, trymax = 100) stressplot(NMDS_L5, pch = 19, cex=0.75, l.col = &quot;tomato&quot;, p.col = &quot;skyblue&quot;) info_L5 = data.frame(x=NMDS_L5$point[,2],y=NMDS_L5$point[,1],SampleID = as.factor(grouping_info[,1])) # Merge metadata file with info_L5, which contains NMDS coordinates L5_merged &lt;- merge(info_L5, L5_metadata, by.x = &quot;SampleID&quot;, by.y = &quot;SampleID&quot;) Stressplot for Silva-based, filtered, family-level NMDS: # Stress plot stressplot(NMDS_L5, pch = 19, cex=0.75, l.col = &quot;tomato&quot;, p.col = &quot;skyblue&quot;) NMDS of cave vs surface soil (family-level): # Plot NMDS p &lt;- ggplot(L5_merged, aes(x, y, label=&quot;&quot;, color = Type, group = Type, text = paste(&quot;Cave: &quot;, Cave))) + geom_point() + # scale_shape_manual(values=c(1:17)) + scale_color_manual(values=c(&quot;skyblue&quot;, &quot;tomato&quot;, &quot;skyblue&quot;, &quot;tomato&quot;)) + geom_text() + ggtitle(&quot;Family-level NMDS using Silva (with Filtering)&quot;) + theme(panel.background = element_rect(&quot;white&quot;)) + stat_ellipse(geom = &quot;path&quot;) p &lt;- ggplotly(p) p NMDS plot with ellipses indicating 95% confidence level at which ellipses were drawn: # Plot NMDS p &lt;- ggplot(L5_merged, aes(x, y, label=&quot;&quot;, color = Class, group = Mat_color, text = paste(&quot;Cave: &quot;, Cave))) + geom_point() + # scale_shape_manual(values=c(1:17)) + scale_color_manual(values=c(&quot;darkgoldenrod4&quot;, &quot;tan&quot;, &quot;grey88&quot;, &quot;gold&quot;)) + geom_text() + ggtitle(&quot;Family-level NMDS using Silva (with Filtering)&quot;) + theme(panel.background = element_rect(&quot;white&quot;)) + stat_ellipse(geom = &quot;path&quot;) p &lt;- ggplotly(p) p "]
]
